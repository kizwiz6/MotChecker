@page "/"
@using MotChecker.Components
@using MotChecker.Services
@using System.ComponentModel.DataAnnotations
@inject IVehicleService VehicleService

<PageTitle>MOT History Checker</PageTitle>

<div class="container mx-auto px-4 py-8">
    <div class="max-w-2xl mx-auto">
        @* Header section *@
        <div class="text-center mb-8">
            <h1 class="text-3xl font-bold text-gray-900 mb-2">MOT History Checker</h1>
            <p class="text-gray-600">Quick and easy access to vehicle MOT information</p>
        </div>

        @* Search form *@
        <div class="bg-white shadow-sm rounded-lg p-6 mb-6 transform transition-all duration-200 hover:shadow-md">
            <EditForm Model="@searchModel" OnValidSubmit="HandleSearch">
                <DataAnnotationsValidator />

                <div class="mb-4">
                    <label for="registration" class="block text-sm font-medium text-gray-700 mb-2">
                        Vehicle Registration
                    </label>
                    <div class="flex gap-4">
                        <InputText id="registration"
                                   @bind-Value="searchModel.Registration"
                                   class="block w-full rounded-md border border-gray-300 px-4 py-2
                                      focus:border-primary-500 focus:ring-primary-500 uppercase
                                      transition-colors duration-200"
                                   placeholder="Enter registration (e.g., AB12CDE)" />

                        <button type="submit"
                                disabled="@isLoading"
                                class="bg-primary-600 hover:bg-primary-700 text-white px-6 py-2
                                       rounded-md font-medium disabled:bg-primary-400
                                       transition-colors duration-200 min-w-[120px]
                                       flex items-center justify-center">
                            @if (isLoading)
                            {
                                <LoadingSpinner Size="4" Color="white" />
                            }
                            else
                            {
                                <span>Search</span>
                            }
                        </button>
                    </div>
                    <ValidationMessage For="@(() => searchModel.Registration)" class="text-red-500 text-sm mt-1" />
                </div>
            </EditForm>
        </div>

        @* Error message *@
        @if (errorMessage is not null)
        {
            <div class="bg-red-50 border-l-4 border-red-500 p-4 mb-6 animate-fadeIn" role="alert">
                <div class="flex">
                    <div class="flex-shrink-0">
                        <svg class="h-5 w-5 text-red-400" viewBox="0 0 20 20" fill="currentColor">
                            <path fill-rule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zM8.707 7.293a1 1 0 00-1.414 1.414L8.586 10l-1.293 1.293a1 1 0 101.414 1.414L10 11.414l1.293 1.293a1 1 0 001.414-1.414L11.414 10l1.293-1.293a1 1 0 00-1.414-1.414L10 8.586 8.707 7.293z" clip-rule="evenodd" />
                        </svg>
                    </div>
                    <div class="ml-3">
                        <p class="text-sm text-red-700">@errorMessage</p>
                    </div>
                </div>
            </div>
        }

        @* Results *@
        @if (vehicleDetails is not null)
        {
            <div class="bg-white shadow-sm rounded-lg p-6 animate-fadeIn">
                <h2 class="text-xl font-semibold text-gray-900 mb-4 flex items-center">
                    <svg class="h-6 w-6 text-primary-600 mr-2" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z" />
                    </svg>
                    Vehicle Details
                </h2>
                <dl class="grid grid-cols-1 md:grid-cols-2 gap-6">
                    <div class="bg-gray-50 px-4 py-3 rounded-lg">
                        <dt class="text-sm font-medium text-gray-500">Registration</dt>
                        <dd class="mt-1 text-lg text-gray-900 font-semibold">@vehicleDetails.Registration</dd>
                    </div>
                    <div class="bg-gray-50 px-4 py-3 rounded-lg">
                        <dt class="text-sm font-medium text-gray-500">Make</dt>
                        <dd class="mt-1 text-lg text-gray-900">@vehicleDetails.Make</dd>
                    </div>
                    <div class="bg-gray-50 px-4 py-3 rounded-lg">
                        <dt class="text-sm font-medium text-gray-500">Model</dt>
                        <dd class="mt-1 text-lg text-gray-900">@vehicleDetails.Model</dd>
                    </div>
                    <div class="bg-gray-50 px-4 py-3 rounded-lg">
                        <dt class="text-sm font-medium text-gray-500">Colour</dt>
                        <dd class="mt-1 text-lg text-gray-900">@vehicleDetails.Colour</dd>
                    </div>
                    <div class="bg-gray-50 px-4 py-3 rounded-lg">
                        <dt class="text-sm font-medium text-gray-500">MOT Expiry Date</dt>
                        <dd class="mt-1 text-lg text-gray-900">@vehicleDetails.MotExpiryDate.ToString("d MMMM yyyy")</dd>
                    </div>
                    <div class="bg-gray-50 px-4 py-3 rounded-lg">
                        <dt class="text-sm font-medium text-gray-500">Last MOT Mileage</dt>
                        <dd class="mt-1 text-lg text-gray-900">@vehicleDetails.MileageAtLastMot.ToString("N0") miles</dd>
                    </div>
                </dl>
            </div>
        }
    </div>
</div>

@code {
    private readonly SearchModel searchModel = new();
    private VehicleDetails? vehicleDetails;
    private string? errorMessage;
    private bool isLoading;

    private async Task HandleSearch()
    {
        try
        {
            isLoading = true;
            errorMessage = null;
            vehicleDetails = null;

            vehicleDetails = await VehicleService.GetVehicleDetailsAsync(searchModel.Registration);
        }
        catch (Exception ex)
        {
            errorMessage = "Unable to retrieve vehicle details. Please try again.";
        }
        finally
        {
            isLoading = false;
        }
    }

    public class SearchModel
    {
        [Required(ErrorMessage = "Please enter a registration number")]
        [RegularExpression(@"^[A-Z0-9]{1,7}$",
            ErrorMessage = "Please enter a valid UK registration number")]
        public string Registration { get; set; } = string.Empty;
    }
}